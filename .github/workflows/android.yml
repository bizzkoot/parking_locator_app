name: Android CI

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analyze:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
          
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
          default: false  # Disable default setup if using advanced configurations
          
      - name: Build Release with Gradle
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          ./gradlew clean
          ./gradlew assembleRelease --no-daemon
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Notify CodeQL Analysis Failure
        if: failure()  # This step runs only if the previous step fails
        run: echo "CodeQL analysis failed! Please check the logs."

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build Release APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Notify Build Failure
        if: failure()  # This step runs only if the previous step fails
        run: echo "Build failed! Please check the logs."

      - name: List APK files
        run: find . -name "*.apk"

      - name: Rename APK
        run: |
          APK_PATH=$(find . -name "*.apk")
          mv "$APK_PATH" "Parking Locator ${{ env.VERSION }}.apk"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: "Parking Locator ${{ env.VERSION }}.apk"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Release Failure
        if: failure()  # This step runs only if the previous step fails
        run: echo "Release creation failed! Please check the logs."

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create keystore directory
        run: mkdir -p keystore

      - name: Create keystore
        run: echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 --decode > keystore/release.keystore

      - name: Build with Gradle
        run: ./gradlew clean assembleRelease
