name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '30 1 * * 0'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        config-file: .github/codeql/codeql-config.yml
        queries: security-and-quality
        tools: latest

    - name: Setup Java
      if: matrix.language == 'java'
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'

    - name: Build Java
      if: matrix.language == 'java'
      env:
        JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64
        GRADLE_OPTS: "-Dorg.gradle.daemon=false -Xmx4g"
      run: |
        chmod +x ./gradlew
        ./gradlew assembleDebug \
          --no-daemon \
          -Dorg.gradle.dependency.verification=off \
          -Dorg.gradle.warning.mode=none \
          --info --stacktrace        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
